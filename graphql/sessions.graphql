extend type Query {
    sessions:  [Session] @field(resolver: "App\\GraphQL\\Queries\\SessionQuery@getAllSessions") @guard
    sessionStatistics: SessionStatistics @field(resolver: "App\\GraphQL\\Queries\\SessionQuery@getSessionsReport") @guard @can(ability: "isRootUser",model: "App\\Models\\User")
}

extend type Mutation {
    opensession: Session @field(resolver: "App\\GraphQL\\Mutations\\SessionMutation@openSession") @guard 
    closesession: Session @field(resolver: "App\\GraphQL\\Mutations\\SessionMutation@closeSession") @guard
}

type Session {
    id: ID,
    company: Company @belongsTo,
    user: User @belongsTo,
    total_session_time: String,
    status_id: ID,
    status: Status @belongsTo,
    start_date: String,
    end_date: String,
    created_month: String
}

type SessionStatistics {
    total_hours: Months,
    active_hours: Months,
    meeting_hours: Months,
    idle_hours: Months,
    total_sessions_count: Int
}

type Months {
    Jan: Int,
    Feb: Int,
    Mar: Int,
    Apr: Int,
    May: Int,
    Jun: Int,
    Jul: Int,
    Aug: Int,
    Sep: Int,
    Oct: Int,
    Nov: Int,
    Dec: Int
}
